/* Uma string √© uma sequ√™ncia ordenada imut√°vel de valores 16 bits onde cada um representa um caractere Unicode,
√© utilizada para representar textos.
O comprimento de uma string √© o n√∫mero de valores de 16 bits que ela cont√©m.
As Strings e seus arrays utilizam a indexa√ß√£o com base em zero. Poranto a primeira posi√ß√£o √© o 0.
Uma string vazia possui comprimento 0. Em Javascript n√£o possui um tipo especial para representar um un√≠co caractere
por tanto basta usar uma string que possua comprimento 1*/

let p = "œÄ"
let e = "ùëí"  

console.log(p.length)   // consiste em um elemento 16 bits
console.log(e.length)  // consiste em dois elementos de 16 bits, \ud835\ e udc52 para representar o e italico 

/*Strings literais s√£o valores n√£o atribuidos a vari√°veis */

""          //String vazia
'Bom dia' 
"3.14"
'nome = "bruno"'
console.log("ph'nglui mglw'nafh Cthulhu R'lyeh wgah'nagl fhtagn")
console.log("Essa frase\ntem duas linhas")

/*Em ECMASCRIPT 3 as strings literais devem ser escritas em uma √∫nica linha, j√° no ECMASCRIPT 5 podem ser separadas
em outras linhas*/
console.log("Duas\nlinhas")

console.log("One\
Punch\
Man")   //Resultado: OnePunchMan

/*Sequ√™ncias de escape em strings literais

O caractere de barra invertida \ tem um proposito nas strings em JS, combinado que vem com o caractere que vem a seguir
ele representa um caractere que n√£o pode ser representado de outra forma, como por exemplo \n significa nova linha.
*/
console.log('Bonjour \'mademoiselle\'')  //Aplica√ß√£o interessante de \'




